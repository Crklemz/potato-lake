// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HomePage {
  id                    Int              @id @default(autoincrement())
  heroTitle             String
  heroSubtitle          String?
  heroImageUrl          String?
  introHeading          String
  introText             String
  subHeading            String?
  carouselImages        HomePageImage[]
  alertBanner           String?
  alertBannerActive     Boolean          @default(false)
  latestNewsHeading     String?
  upcomingEventsHeading String?
  membershipHeading     String?
  membershipText        String?
  membershipButtonText  String?
  communityHeading      String?
  communityText         String?
  updatedAt             DateTime         @updatedAt
}

model HomePageImage {
  id        Int      @id @default(autoincrement())
  homePageId Int
  url       String
  altText   String?
  caption   String?
  order     Int      @default(0)
  homePage  HomePage @relation(fields: [homePageId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model ResortsPage {
  id             Int      @id @default(autoincrement())
  heroTitle      String   @default("Resorts & Lodging")
  heroSubtitle   String?
  heroImageUrl   String?
  ctaText        String?
  ctaLink        String?
  introHeading   String   @default("Welcome to Our Resorts")
  introText      String   @default("Discover the perfect accommodations for your Potato Lake getaway. Our resorts offer comfortable lodging, beautiful lake views, and easy access to all the activities that make Potato Lake special.")
  footerHeading  String?
  footerSubheading String?
  footerLinkText String?
  footerLinkUrl  String?
  resorts        Resort[]
  updatedAt      DateTime @updatedAt
}

model Resort {
  id            Int         @id @default(autoincrement())
  resortsPageId Int
  name          String
  address       String
  phone         String
  imageUrl      String?
  description   String?
  websiteUrl    String?
  order         Int         @default(0)
  resortsPage   ResortsPage @relation(fields: [resortsPageId], references: [id])
}

model FishingPage {
  id                 Int          @id @default(autoincrement())
  fishHeading        String
  fishText           String
  heroTitle          String       @default("Fishing on Potato Lake")
  heroSubtitle       String?
  heroImageUrl       String?
  ctaText            String?
  ctaLink            String?
  regulationsHeading String?
  regulationsText    String?
  regulationsCtaText String?
  regulationsCtaLink String?
  fishingReportHeading String?
  fishingReportText   String?
  fishingReportDate   DateTime?
  fishingCtaHeading  String?
  fishingCtaText     String?
  fishingCtaButtonText String?
  fishingCtaButtonLink String?
  infoSectionHeading String?
  infoSectionSubheading String?
  regulationsLabel   String?
  regulationsTextNew String?
  regulationsLinkText String?
  regulationsLinkUrl String?
  reportLabel        String?
  reportTextNew      String?
  reportLastUpdated  DateTime?
  fishingRegulationLinks Json?
  fishSpecies        FishSpecies[]
  galleryImages      FishingGalleryImage[]
  fishingTips        FishingTip[]
  updatedAt          DateTime     @updatedAt
}

model FishSpecies {
  id           Int         @id @default(autoincrement())
  name         String
  order        Int         @default(0)
  fishingPageId Int?
  description  String?
  bait         String?
  timeOfDay    String?
  weather      String?
  imageUrl     String?
  fishingPage  FishingPage? @relation(fields: [fishingPageId], references: [id], onDelete: SetNull)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model DnrPage {
  id        Int      @id @default(autoincrement())
  dnrHeading String
  dnrText   String
  heroImageUrl String?
  ctaText   String?
  ctaLink   String?
  mapUrl    String?
  dnrStewardshipHeading String? @default("Wisconsin DNR & Lake Stewardship")
  dnrStewardshipText String? @default("The Wisconsin Department of Natural Resources works in partnership with local organizations like the Potato Lake Association to protect lake health and encourage responsible use. These efforts include water quality monitoring, shoreline protection, aquatic habitat restoration, and invasive species prevention.")
  dnrStewardshipCtaText String?
  dnrStewardshipCtaUrl String?
  dnrFishingCardHeading String? @default("Fishing Regulations")
  dnrFishingCardItems Json? @default("[\"License requirements\", \"Size and possession limits\", \"Seasonal restrictions\", \"Special lake-specific rules\"]")
  dnrFishingCardCtaText String? @default("Full Fishing Regulations")
  dnrFishingCardCtaUrl String? @default("https://dnr.wisconsin.gov/topic/Fishing/regulations")
  dnrBoatingCardHeading String? @default("Boating Safety")
  dnrBoatingCardItems Json? @default("[\"Boat registration rules\", \"Speed limit areas\", \"Required safety equipment\", \"Invasive species prevention steps\"]")
  dnrBoatingCardCtaText String? @default("Boating Laws & Safety")
  dnrBoatingCardCtaUrl String? @default("https://dnr.wisconsin.gov/topic/Boat")
  regulationsHeading String? @default("Fishing & Boating Regulations")
  regulationsSubheading String? @default("Stay safe and informed with key rules for enjoying Potato Lake. These summaries highlight important DNR guidelines for fishing and boating.")
  mapHeading String? @default("Potato Lake Map")
  mapCaption String? @default("View access points, water depth, and aquatic vegetation zones.")
  mapEmbedUrl String?
  mapExternalLinkText String? @default("View Full Bathymetric Map")
  mapExternalLinkUrl String?
  updatedAt DateTime @updatedAt
}

model NewsPage {
  id          Int     @id @default(autoincrement())
  mainHeading String
  events      Event[]
  news        News[]
  updatedAt   DateTime @updatedAt
}

model News {
  id          Int      @id @default(autoincrement())
  newsPageId  Int
  title       String
  content     String
  date        DateTime @default(now())
  imageUrl    String?
  newsPage    NewsPage @relation(fields: [newsPageId], references: [id])
}

model Event {
  id          Int      @id @default(autoincrement())
  newsPageId  Int
  title       String
  date        DateTime
  description String
  imageUrl    String?
  newsPage    NewsPage @relation(fields: [newsPageId], references: [id])
}

model AreaServicesPage {
  id          Int       @id @default(autoincrement())
  heading     String
  description String
  sponsors    Sponsor[]
  updatedAt   DateTime  @updatedAt
}

model Sponsor {
  id                  Int                @id @default(autoincrement())
  areaServicesPageId  Int
  name                String
  logoUrl             String?
  link                String?
  areaServicesPage    AreaServicesPage   @relation(fields: [areaServicesPageId], references: [id])
}

model AssociationPage {
  id           Int      @id @default(autoincrement())
  heading      String
  description  String
  meetingNotes String?
  contactEmail String?
  updatedAt    DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  altText   String?
  caption   String?
  pageType  String
  pageId    Int
  createdAt DateTime @default(now())
}

model SeoMeta {
  id          Int      @id @default(autoincrement())
  page        String
  title       String
  description String
  keywords    String?
  updatedAt   DateTime @updatedAt
}

model MembershipTier {
  id            Int      @id @default(autoincrement())
  name          String
  price         Float
  isLifetime    Boolean
  benefits      String
  showInListing Boolean
  updatedAt     DateTime @updatedAt
}

model Resource {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  fileUrl     String
  category    String?
  updatedAt   DateTime @updatedAt
}

model Member {
  id           Int      @id @default(autoincrement())
  name         String
  tier         String
  isHighlighted Boolean
  updatedAt    DateTime @updatedAt
}

model CommunityStory {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  authorName  String
  authorEmail String
  imageUrl    String?
  isApproved  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FishingGalleryImage {
  id           Int         @id @default(autoincrement())
  fishingPageId Int
  imageUrl     String
  altText      String
  caption      String?
  order        Int         @default(0)
  fishingPage  FishingPage @relation(fields: [fishingPageId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())
}

model FishingTip {
  id           Int         @id @default(autoincrement())
  text         String
  submittedBy  String?
  order        Int         @default(0)
  fishingPageId Int
  fishingPage  FishingPage @relation(fields: [fishingPageId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}
